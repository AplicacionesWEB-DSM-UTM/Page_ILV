@page "/editar-perfil"

@using Page_ILV.Data;
@using System.Net.Http;
@using System.Net.Http.Json;
@inject HttpClient Http;
@inject NavigationManager Navegacion;
@inject AppData appData

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <link rel="stylesheet" href="css/assets/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:400,400i,700,700i,600,600i">
    <link rel="stylesheet" href="css/assets/fonts/simple-line-icons.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/baguettebox.js/1.10.0/baguetteBox.min.css">
    <link rel="stylesheet" href="css/assets/css/vanilla-zoom.min.css">
    <link rel="stylesheet" href="css/assets/css/stilos.css">
</head>
@if (msg != null)
{
<p class="text-danger"><b><i>@msg</i></b></p> }
else
{
    <header class="text-center text-white masthead" style="background: url('css/img/Osc/Img8.jpg')no-repeat center center; background-size: cover; height: 393px; ">
    </header>

    <section class="clean-block clean-info dark m-3 py-5">
        <div class="container">
            <div class="row align-items-center">
                <EditForm Model="oRegistro">
                    <DataAnnotationsValidator />
                    <div class="form-group row mb-1">
                        <label class="col-sm-3">Foto</label>
                        <div class="col-sm-9">
                            <InputText class="form-control" @bind-Value="@oRegistro.NombreFoto"></InputText>
                            <ValidationMessage For="(() => oRegistro.NombreFoto)" />
                        </div>
                    </div>
                    <div class="form-group row mb-1">
                        <label class="col-sm-3">Nombre</label>
                        <div class="col-sm-9">
                            <InputText class="form-control" @bind-Value="@oRegistro.Nombre"></InputText>
                            <ValidationMessage For="(() => oRegistro.Nombre)" />
                        </div>
                    </div>
                    <div class="form-group row mb-1">
                        <label class="col-sm-3">Apellidos</label>
                        <div class="col-sm-9">
                            <InputText class="form-control" @bind-Value="@oRegistro.Apellido"></InputText>
                            <ValidationMessage For="(() => oRegistro.Apellido)" />
                        </div>
                    </div>
                    <div class="form-group row mb-1">
                        <label class="col-sm-3">Correo</label>
                        <div class="col-sm-9">
                            <InputText type="email" class="form-control" @bind-Value="@oRegistro.Correo"></InputText>
                            <ValidationMessage For="(() => oRegistro.Correo)" />
                        </div>
                    </div>
                    <div class="form-group row mb-1">
                        <label class="col-sm-3">Contraseña</label>
                        <div class="col-sm-9">
                            <InputText type="password" class="form-control" @bind-Value="@oRegistro.Password"></InputText>
                            <ValidationMessage For="(() => oRegistro.Password)" />
                        </div>
                    </div>
                    <div class="mb-1">
                        <button class="btn btn-outline-primary m1" @onclick="Guardar">Guadar</button>
                        <button class="btn btn-outline-danger m1" @onclick="Cancelar">Cancelar</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </section>
}
@code {

    public string token { get; set; }
    public string msg { get; set; }
    UsuarioRequest oRegistro = new UsuarioRequest();
    FotoRequest oFoto = new FotoRequest();
    Respuesta<UsuarioRequest> oRespuestaRegistro = new Respuesta<UsuarioRequest>();
    public string Url_usuario = "/api/Usuario/verify?key=";

    public string Url = "/api/Usuario";
    Respuesta<object> oRespuesta = new Respuesta<object>();

    private void Cancelar() => Navegacion.NavigateTo("/perfil");

    private async Task Guardar()
    {
        if (oRegistro.Nombre != null && oRegistro.Apellido != null && oRegistro.Correo != null && oRegistro.Password != null && oRegistro.NombreFoto != null)
        {
            if (oRegistro.Nombre != string.Empty && oRegistro.Apellido != string.Empty && oRegistro.Correo != string.Empty && oRegistro.Password != string.Empty && oRegistro.NombreFoto != string.Empty)
            {
                oRegistro.FotoRequest = new FotoRequest()
                {
                    Nombre = oRegistro.NombreFoto,
                    Url = "https://localhost:44315/Img/usr/" + oRegistro.NombreFoto
                };

                if (oRegistro.IdUsuario != 0)
                {
                    oRegistro.FotoRequest.IdFoto = oRegistro.IdFoto;
                    var response = await Http.PutAsJsonAsync<UsuarioRequest>(Url, oRegistro);
                    oRespuesta = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
                    Navegacion.NavigateTo("/perfil");
                }
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(appData.Token))
        {
            token = appData.Token;
            oRespuestaRegistro = await Http.GetFromJsonAsync<Respuesta<UsuarioRequest>>(Url_usuario + token);
            oRegistro = oRespuestaRegistro.Data;
            oRegistro.NombreFoto = oRegistro.FotoRequest.Nombre;

            if (oRegistro == null)
            {
                msg = oRespuestaRegistro.Mensaje;
            }
        }
        else
        {
            msg = "No se ha iniciado una sesion, porfavor inicie sesion e intente de nuevo";
        }
    }
}

