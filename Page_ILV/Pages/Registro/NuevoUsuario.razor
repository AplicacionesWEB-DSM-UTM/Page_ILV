@page "/nuevo-registro"

@using Page_ILV.Data;
@using System.Net.Http;
@using System.Net.Http.Json;
@inject HttpClient Http;
@inject NavigationManager Navegacion;

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <link rel="stylesheet" href="css/assets/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Montserrat:400,400i,700,700i,600,600i">
    <link rel="stylesheet" href="css/assets/fonts/simple-line-icons.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/baguettebox.js/1.10.0/baguetteBox.min.css">
    <link rel="stylesheet" href="css/assets/css/vanilla-zoom.min.css">
    <link rel="stylesheet" href="css/assets/css/stilos.css">
</head>

<header class="text-center text-white masthead" style="background: url('css/img/Banner4.jpg')no-repeat center center; background-size: cover; height: 393px; ">
</header>

<section class="clean-block clean-info dark m-3 py-5">
    <div class="container">
        <div class="row align-items-center">
            <EditForm Model="oRegistro">
                <DataAnnotationsValidator />
                <div class="form-group row mb-1">
                    <label class="col-sm-3">Foto</label>
                    <div class="col-sm-9">
                        <InputText class="form-control" @bind-Value="@oRegistro.NombreFoto"></InputText>
                        <ValidationMessage For="(() => oRegistro.NombreFoto)" />
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label class="col-sm-3">Nombre</label>
                    <div class="col-sm-9">
                        <InputText class="form-control" @bind-Value="@oRegistro.Nombre"></InputText>
                        <ValidationMessage For="(() => oRegistro.Nombre)" />
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label class="col-sm-3">Apellidos</label>
                    <div class="col-sm-9">
                        <InputText class="form-control" @bind-Value="@oRegistro.Apellido"></InputText>
                        <ValidationMessage For="(() => oRegistro.Apellido)" />
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label class="col-sm-3">Correo</label>
                    <div class="col-sm-9">
                        <InputText type="email" class="form-control" @bind-Value="@oRegistro.Correo"></InputText>
                        <ValidationMessage For="(() => oRegistro.Correo)" />
                    </div>
                </div>
                <div class="form-group row mb-1">
                    <label class="col-sm-3">Contraseña</label>
                    <div class="col-sm-9">
                        <InputText type="password" class="form-control" @bind-Value="@oRegistro.Password"></InputText>
                        <ValidationMessage For="(() => oRegistro.Password)" />
                    </div>
                </div>
                <div class="mb-1">
                        <button class="btn btn-outline-primary m1" @onclick="Guardar">Guadar</button>
                        <button class="btn btn-outline-danger m1" @onclick="Cancelar">Cancelar</button>
                </div>
            </EditForm>
        </div>
    </div>
</section>
    @code {
        UsuarioRequest oRegistro = new UsuarioRequest();
        Respuesta<object> oRespuesta = new Respuesta<object>();
        Respuesta<UsuarioRequest> oRespuestaRegistro = new Respuesta<UsuarioRequest>();

        public string Url = "/api/Usuario";

        private void Cancelar() => Navegacion.NavigateTo("/");

        private async Task Guardar()
        {
            if (oRegistro.Nombre != null && oRegistro.Apellido != null && oRegistro.Correo != null && oRegistro.Password != null && oRegistro.NombreFoto != null)
            {
                if (oRegistro.Nombre != string.Empty && oRegistro.Apellido != string.Empty && oRegistro.Correo != string.Empty && oRegistro.Password != string.Empty && oRegistro.NombreFoto != string.Empty)
                {
                    oRegistro.FotoRequest = new FotoRequest()
                    {
                        Nombre = oRegistro.NombreFoto,
                        Url = "https://localhost:44315/Img/usr/" + oRegistro.NombreFoto
                    };

                    var response = await Http.PostAsJsonAsync<UsuarioRequest>(Url, oRegistro);
                    oRespuesta = response.Content.ReadFromJsonAsync<Respuesta<object>>().Result;
                    Navegacion.NavigateTo("/");
                }
            }
        }

        protected override async Task OnInitializedAsync()
        {
            oRegistro.NombreFoto = "not-found.png";
        }
    }

