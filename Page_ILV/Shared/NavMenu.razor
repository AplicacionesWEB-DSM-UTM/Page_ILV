@using System.Net.Http;
@using Page_ILV.Data;
@using System.Net.Http.Json;
@inject HttpClient Http;
@inject NavigationManager Navegacion;
@inject IJSRuntime _jsRuntime;
@inject AppData appData

<nav class="navbar navbar-expand-lg navbar-light" style="background-color: #94d494;">
    <a class="navbar-brand" href="#"></a><img src="css/Img/textwit.png" alt="Text" width="185" height="40" />

    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">

            <li class="nav-item px-3">
                <NavLink class="nav-link text-white" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </li>

            <li class="nav-item px-3">
                <NavLink class="nav-link text-white" href="about">
                    <span class="oi oi-info" aria-hidden="true"></span> Sobre nosotros
                </NavLink>
            </li>

            <li class="nav-item px-3">
                <NavLink class="nav-link text-white" href="mapa">
                    <span class="oi oi-map" aria-hidden="true"></span> Mapa
                </NavLink>
            </li>

            @if (oRespuestaRegistro.Data != null)
            {
                if (oRegistro.IsAdmin == 0)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link text-white" href="nuevo-report">
                            <span class="oi oi-plus" aria-hidden="true"></span> Reportar Falla
                        </NavLink>
                    </li>
                }
                else if (oRegistro.IsAdmin == 1)
                {
                    <li class="nav-item px-3">
                        <NavLink class="nav-link text-white" href="admin">
                            <span class="oi oi-shield" aria-hidden="true"></span> Administrar
                        </NavLink>
                    </li>
                }
                <li class="nav-item px-3 align-content-end">
                    <NavLink class="nav-link text-white" href="" @onclick="@CerrarSesion">
                        <span class="oi oi-person" aria-hidden="true"></span> cerrar sesion
                    </NavLink>
                </li>

                <li class="nav-item px-3 align-content-end">
                    <NavLink class="nav-link text-white" href="perfil">
                        <span class="oi oi-random" aria-hidden="true"></span> Mi perfil
                    </NavLink>
                </li>
            }
            else
            {
                <li class="nav-item px-3 align-content-end">
                    <NavLink class="nav-link text-white" href="Login">
                        <span class="oi oi-person" aria-hidden="true"></span> Iniciar sesion
                    </NavLink>
                </li>

                <li class="nav-item px-3 align-content-end">
                    <NavLink class="nav-link text-white" href="nuevo-registro">
                        <span class="oi oi-people" aria-hidden="true"></span> Registrarse
                    </NavLink>
                </li>
            }
        </ul>


        <div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
        </div>
    </div>
</nav>


@code {
    public string token { get; set; }
    UsuarioRequest oRegistro = new UsuarioRequest();
    Respuesta<UsuarioRequest> oRespuestaRegistro = new Respuesta<UsuarioRequest>();
    public string Url_usuario = "/api/Usuario/verify?key=";

    private readonly string llaveToken = "token";

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task CerrarSesion()
    {
        await _jsRuntime.InvokeVoidAsync("EliminarCookie", llaveToken);
        Navegacion.NavigateTo("/", true);
    }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(appData.Token))
        {
            token = appData.Token;
            oRespuestaRegistro = await Http.GetFromJsonAsync<Respuesta<UsuarioRequest>>(Url_usuario + token);
            oRegistro = oRespuestaRegistro.Data;
        }
    }
}
